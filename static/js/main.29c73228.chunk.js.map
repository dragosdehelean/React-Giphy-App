{"version":3,"sources":["components/Header.js","components/SearchBar.js","components/GifItem.js","components/GifList.js","components/Home.js","components/MyCollection.js","components/Upload.js","components/NotFound.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","NavLink","exact","to","activeClassName","SearchBar","state","timeoutId","searchTerm","onChangeHandler","ev","_this","clearTimeout","id","setTimeout","props","onSearchChange","setState","target","value","handleSubmit","preventDefault","onSubmit","this","type","placeholder","onChange","Component","GiftItem","_ref","gif","inCollection","toggleCollection","label","labelClass","Fragment","data-toggle","data-target","src","images","fixed_width","url","alt","title","checked","username","rating","import_datetime","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","GiftList","gifs","isInCollection","onToggleCollection","map","GifItem","key","Home","components_SearchBar","GifList","MyCollection","Upload","selectedFile","errorMsg","successMsg","fileSelectedHandler","files","generateErrorMsg","info","newError","generateSuccessMsg","concat","fetch","then","res","json","newSuccess","data","embed_url","width","height","frameBorder","allowFullScreen","href","fileUploadHandler","formData","FormData","append","method","body","response","payload","console","log","meta","status","msg","catch","err","message","dir","htmlFor","name","onClick","NotFound","App","myCollection","indexOf","handleToggleCollection","prevState","filter","item","Object","toConsumableArray","handleOnSearchChange","error","_this2","_this3","HashRouter","basename","components_Header","Switch","Route","path","render","components_Home","component","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.29c73228.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = () => (\r\n  <ul className=\"nav nav-pills my-3\">\r\n    <li className=\"nav-item\">\r\n      <NavLink exact to=\"/\" activeClassName=\"active\" className=\"nav-link\">\r\n        Home\r\n      </NavLink>\r\n    </li>\r\n    <li className=\"nav-item\">\r\n      <NavLink to=\"/mycollection\" className=\"nav-link\" activeClassName=\"active\">My Collection</NavLink>\r\n    </li>\r\n    <li className=\"nav-item\">\r\n      <NavLink to=\"/upload\" className=\"nav-link\" activeClassName=\"active\">Upload Photo</NavLink>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    timeoutId: 0,\r\n    searchTerm: \"\"\r\n  };\r\n  /**\r\n   * Handles the change on the search term & triggers a new fetch only after the user stopped typing\r\n   */\r\n  onChangeHandler = ev => {\r\n    if (this.state.timeoutId) {\r\n      clearTimeout(this.state.timeoutId);\r\n    }\r\n    const id = setTimeout(() => {\r\n      this.props.onSearchChange(this.state.searchTerm);\r\n    }, 800);\r\n    this.setState({ timeoutId: id, searchTerm: ev.target.value });\r\n  };\r\n\r\n  /**\r\n   * Does nothing but blocks the default behaviour\r\n   * Changes of the search term are handled by onChangeHandler\r\n   */\r\n  handleSubmit = ev => {\r\n    ev.preventDefault();\r\n    const searchTerm = this.state.searchTerm;\r\n    if (searchTerm) this.props.onSearchChange(this.state.searchTerm);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n     \r\n        <div className=\"col-12 col-md-10 col-lg-8\">\r\n          <form className=\"card card-sm\" onSubmit={this.handleSubmit}>\r\n            <div className=\"card-body row no-gutters align-items-center\">\r\n              <div className=\"col-auto\">\r\n                <i className=\"fas fa-search h3 text-body\" />\r\n              </div>\r\n              <div className=\"col\">\r\n                <input\r\n                  className=\"form-control form-control-lg form-control-borderless\"\r\n                  type=\"search\"\r\n                  placeholder=\"Search for something funny!\"\r\n                  value={this.state.searchTerm}\r\n                  onChange={this.onChangeHandler}\r\n                />\r\n              </div>\r\n              <div className=\"col-auto\">\r\n                <button className=\"btn btn-lg btn-success\" type=\"submit\">\r\n                  Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n     \r\n    );\r\n  }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  onSearchChange: propTypes.func.isRequired\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst GiftItem = ({ gif, inCollection, toggleCollection }) => {\r\n  const label = inCollection\r\n    ? \"Remove from MyCollection\"\r\n    : \"Add to MyCollection\";\r\n  const labelClass = inCollection\r\n    ? \"btn btn-outline-danger active btn-block\"\r\n    : \"btn btn-success btn-block\";\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"card mb-4 shadow-sm\" data-toggle=\"modal\" data-target=\"#exampleModalLong\">\r\n        <img\r\n          className=\"card-img-top img-fluid\"\r\n          src={gif.images.fixed_width.url}\r\n          alt={gif.title}\r\n          title={gif.title}\r\n        />\r\n        <div className=\"card-body\">\r\n          <div className=\"btn-group-toggle\" data-toggle=\"buttons\">\r\n            <label className={labelClass}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={inCollection}\r\n                onChange={toggleCollection}\r\n              />\r\n              {label}\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <ul className=\"list-group list-group-flush\">\r\n          {gif.username ? (\r\n            <li className=\"list-group-item\">\r\n              <strong>Username:</strong> {gif.username}\r\n            </li>\r\n          ) : null}\r\n\r\n          <li className=\"list-group-item\">\r\n            <strong>ID:</strong> {gif.id} | <strong>Rating:</strong>{\" \"}\r\n            {gif.rating}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <strong>Import_datetime:</strong> {gif.import_datetime}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Modal Test */}\r\n\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"exampleModalLong\"\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"exampleModalLongTitle\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">\r\n                Modal title\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">...Test</div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                Close\r\n              </button>            \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nGiftItem.propTypes = {\r\n  gif: propTypes.object.isRequired,\r\n  inCollection: propTypes.bool.isRequired,\r\n  toggleCollection: propTypes.func.isRequired\r\n};\r\n\r\nexport default GiftItem;\r\n","import React from \"react\";\r\nimport GifItem from \"./GifItem\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst GiftList = ({ gifs, isInCollection, onToggleCollection }) => {\r\n  return (\r\n    \r\n      <div className=\"card-columns\">\r\n        {gifs.map(gif => (\r\n          <GifItem\r\n            key={gif.id}\r\n            gif={gif}\r\n            inCollection={isInCollection(gif.id)}\r\n            toggleCollection={() => onToggleCollection(gif)}\r\n          />\r\n        ))}\r\n      </div>\r\n  \r\n  );\r\n};\r\n\r\nGiftList.propTypes = {\r\n  gifs: propTypes.arrayOf(propTypes.object),\r\n  isInCollection: propTypes.func.isRequired,\r\n  onToggleCollection: propTypes.func.isRequired\r\n};\r\n\r\nexport default GiftList;\r\n","import React from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport GifList from \"./GifList\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst Home = ({ onSearchChange, gifs, isInCollection, onToggleCollection }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row justify-content-center my-3\">\r\n        <SearchBar onSearchChange={onSearchChange} />\r\n      </div>\r\n      <div className=\"row\">\r\n        <GifList\r\n          gifs={gifs}\r\n          isInCollection={isInCollection}\r\n          onToggleCollection={onToggleCollection}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nHome.propTypes = {\r\n  onSearchChange: propTypes.func.isRequired,\r\n  gifs: propTypes.arrayOf(propTypes.object),\r\n  onToggleCollection: propTypes.func.isRequired,\r\n  isInCollection: propTypes.func.isRequired,\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst MyCollection = () => {\r\n    return (<div>in lucru</div>  );\r\n}\r\n \r\n \r\nexport default MyCollection;","/**\r\n * API Docs: https://developers.giphy.com/docs/\r\n * api_key=JU6K8LiJFWg6ububq0idHxB0yo7IBEXI\r\n *\r\n * TO DO\r\n * - better error mng\r\n *\r\n */\r\nimport React, { Component } from \"react\";\r\n\r\nclass Upload extends Component {\r\n  state = {\r\n    selectedFile: null,\r\n    errorMsg: null,\r\n    successMsg: null\r\n  };\r\n\r\n  fileSelectedHandler = ev => {\r\n    this.setState({\r\n      selectedFile: ev.target.files[0]\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handles error messages\r\n   */\r\n  generateErrorMsg = info => {\r\n    let newError = (\r\n      <div className=\"alert alert-danger my-0 py-2\" role=\"alert\">\r\n        <p>A aparut o eroare:</p>\r\n        <p>{info}</p>\r\n      </div>\r\n    );\r\n\r\n    this.setState({ errorMsg: newError, successMsg: null });\r\n  };\r\n\r\n  /**\r\n   * Handles success messages\r\n   */\r\n  generateSuccessMsg = id => {\r\n    const url = `https://api.giphy.com/v1/gifs/${id}?api_key=JU6K8LiJFWg6ububq0idHxB0yo7IBEXI`;\r\n\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(info => {\r\n        let newSuccess = (\r\n          <div className=\"alert alert-succes my-0 py-2\" role=\"alert\">\r\n            <p>The image has been uploaded!</p>\r\n            <p>ID: {id}</p>\r\n            <iframe\r\n              src={info.data.embed_url}\r\n              title={info.data.title}\r\n              width=\"480\"\r\n              height=\"460\"\r\n              frameBorder=\"0\"\r\n              className=\"giphy-embed\"\r\n              allowFullScreen\r\n            />\r\n            <p>\r\n              <a href={info.data.url}>via GIPHY</a>\r\n            </p>\r\n          </div>\r\n        );\r\n        this.setState({ errorMsg: null, successMsg: newSuccess });\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Handles the file upload fetching to Giphy API\r\n   */\r\n  fileUploadHandler = ev => {\r\n    ev.preventDefault();\r\n\r\n    const url = `https://upload.giphy.com/v1/gifs?api_key=JU6K8LiJFWg6ububq0idHxB0yo7IBEXI`;\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"file\", this.state.selectedFile);\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      body: formData\r\n    })\r\n      .then(response => response.json())\r\n      .then(payload => {\r\n        console.log(payload);\r\n        // Daca exista erori\r\n        if (payload.meta.status !== 200) {\r\n          let info = `Status: ${payload.meta.status}; Message: ${\r\n            payload.meta.msg\r\n          }`;\r\n          this.generateErrorMsg(info);\r\n        }\r\n        // Daca nu exista erori\r\n        else {\r\n          this.generateSuccessMsg(payload.data.id);\r\n        }\r\n      })\r\n      // Alta eventuala eroare\r\n      .catch(err => {\r\n        this.generateErrorMsg(err.message);\r\n        console.dir(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          {this.state.errorMsg || null}\r\n\r\n          {this.state.successMsg || null}\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"foto\" className=\"col-form-label\">\r\n              Select an animated Gif:\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              onChange={this.fileSelectedHandler}\r\n              id=\"foto\"\r\n              name=\"foto\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success\"\r\n              onClick={this.fileUploadHandler}\r\n            >\r\n              Upload\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Upload;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <div className=\"main-content not-found\">\r\n    \r\n    <h2>Page Not Found :( </h2>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;","/**\r\n * API Docs: https://developers.giphy.com/docs/\r\n * api_key=JU6K8LiJFWg6ububq0idHxB0yo7IBEXI\r\n */\r\nimport React, { Component } from \"react\";\r\nimport { Route, HashRouter, Switch } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Home from \"./components/Home\";\r\nimport MyCollection from \"./components/MyCollection\"\r\nimport Upload from \"./components/Upload\";\r\nimport NotFound from \"./components/NotFound\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    gifs: [],\r\n    myCollection: []\r\n  };\r\n\r\n  /**\r\n   * Checks if a gif's ID is in Mycollection\r\n   */\r\n  isInCollection = id => {\r\n    return this.state.myCollection.map(gif => gif.id).indexOf(id) === -1\r\n      ? false\r\n      : true;\r\n  };\r\n\r\n  /**\r\n   * If the checkbox changes, the gif is added or removed from MyCollection\r\n   */\r\n  handleToggleCollection = gif => {\r\n    // remove\r\n    if (this.isInCollection(gif.id)) {\r\n      this.setState(prevState => ({\r\n        myCollection: prevState.myCollection.filter(item => item.id !== gif.id)\r\n      }));\r\n    } else {\r\n      // add\r\n      this.setState(prevState => ({\r\n        myCollection: [...prevState.myCollection, gif]\r\n      }));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * When the serch term changes, fetches for a new set gifs\r\n   */\r\n  handleOnSearchChange = searchTerm => {\r\n    console.log(searchTerm);\r\n    const url =\r\n      \"https://api.giphy.com/v1/gifs/search?api_key=JU6K8LiJFWg6ububq0idHxB0yo7IBEXI&q=\" +\r\n      searchTerm +\r\n      \"&limit=12\";\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        this.setState({ gifs: json.data });\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  componentDidMount() {\r\n    /**\r\n     * Populates Show Images with default data (without search) - trending gifs\r\n     * https://api.giphy.com/v1/gifs/trending?api_key=JU6K8LiJFWg6ububq0idHxB0yo7IBEXI\r\n     */\r\n    fetch(\r\n      \"https://api.giphy.com/v1/gifs/trending?api_key=JU6K8LiJFWg6ububq0idHxB0yo7IBEXI&limit=12\"\r\n    )\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        this.setState({ gifs: json.data });\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter basename=\"/React-Giphy-App\">\r\n        <div className=\"container\">\r\n          <Header />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={() => (\r\n                <Home\r\n                  onSearchChange={this.handleOnSearchChange}\r\n                  gifs={this.state.gifs}\r\n                  isInCollection={this.isInCollection}\r\n                  onToggleCollection={this.handleToggleCollection}\r\n                />\r\n              )}\r\n            />\r\n            <Route path=\"/mycollection\" component={MyCollection} />\r\n            <Route exact path=\"/upload\" component={Upload} />\r\n\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}