{"version":3,"sources":["components/GifItem.js","components/GifList.js","components/SearchBar.js","App.js","index.js"],"names":["GiftItem","_ref","gif","inCollection","toggleCollection","label","labelClass","react_default","a","createElement","className","src","images","fixed_width","url","alt","title","data-toggle","type","checked","onChange","username","id","rating","import_datetime","GiftList","gifs","isInCollection","onToggleCollection","map","GifItem","key","SearchBar","state","timeoutId","searchTerm","onChangeHandler","ev","_this","clearTimeout","setTimeout","props","onSearchChange","setState","target","value","placeholder","this","Component","App","myCollection","indexOf","handleToggleCollection","prevState","filter","item","concat","Object","toConsumableArray","handleOnSearchChange","console","log","fetch","then","res","json","data","catch","error","_this2","components_SearchBar","GifList","ReactDOM","render","src_App","document","getElementById"],"mappings":"2MAsDeA,EAnDE,SAAAC,GAA6C,IAA1CC,EAA0CD,EAA1CC,IAAKC,EAAqCF,EAArCE,aAAcC,EAAuBH,EAAvBG,iBAE/BC,EAAQF,EAAe,2BAA6B,sBACpDG,EAAaH,EAAe,0CAA4C,4BAG9E,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,yBACVC,IAAKT,EAAIU,OAAOC,YAAYC,IAC5BC,IAAKb,EAAIc,MACTA,MAAOd,EAAIc,QAEbT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBO,cAAY,WAC5CV,EAAAC,EAAAC,cAAA,SAAOC,UAAWJ,GAChBC,EAAAC,EAAAC,cAAA,SACES,KAAK,WACLC,QAAShB,EACTiB,SAAUhB,IAGXC,KAIPE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BACXR,EAAImB,SACHd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAAA,2BADF,IAC8BP,EAAImB,UAEhC,KAEJd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAAA,qBADF,IACwBP,EAAIoB,GAD5B,MACkCf,EAAAC,EAAAC,cAAA,yBADlC,IAC4DP,EAAIqB,QAEhEhB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAAA,kCADF,IACqCP,EAAIsB,oBCdlCC,EAvBE,SAAAxB,GAAkD,IAA/CyB,EAA+CzB,EAA/CyB,KAAMC,EAAyC1B,EAAzC0B,eAAgBC,EAAyB3B,EAAzB2B,mBACxC,OAEIrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZgB,EAAKG,IAAI,SAAA3B,GAAG,OACXK,EAAAC,EAAAC,cAACqB,EAAD,CACEC,IAAK7B,EAAIoB,GACTpB,IAAKA,EACLC,aAAcwB,EAAezB,EAAIoB,IACjClB,iBAAkB,kBAAMwB,EAAmB1B,UC2CxC8B,6MAnDbC,MAAQ,CACNC,UAAW,EACXC,WAAY,MAKdC,gBAAkB,SAACC,GACdC,EAAKL,MAAMC,WACZK,aAAaD,EAAKL,MAAMC,WAE1B,IAAMZ,EAAKkB,WAAW,WACpBF,EAAKG,MAAMC,eAAeJ,EAAKL,MAAME,aACpC,KACHG,EAAKK,SAAS,CAACT,UAAWZ,EAAKa,WAAYE,EAAGO,OAAOC,iFAKrD,OACEtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,SACEC,UAAU,uDACVQ,KAAK,SACL4B,YAAY,8BACZD,MAAOE,KAAKd,MAAME,WAClBf,SAAU2B,KAAKX,mBAGnB7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAyBQ,KAAK,UAAhD,qBAtCU8B,aCkFTC,6MA3EbhB,MAAQ,CACNP,KAAM,GACNwB,aAAc,MAMhBvB,eAAiB,SAAAL,GACf,OAAmE,IAA5DgB,EAAKL,MAAMiB,aAAarB,IAAI,SAAA3B,GAAG,OAAIA,EAAIoB,KAAI6B,QAAQ7B,MAM5D8B,uBAAyB,SAAAlD,GAEnBoC,EAAKX,eAAezB,EAAIoB,IAC1BgB,EAAKK,SAAS,SAAAU,GAAS,MAAK,CAC1BH,aAAcG,EAAUH,aAAaI,OAAO,SAAAC,GAAI,OAAIA,EAAKjC,KAAOpB,EAAIoB,QAItEgB,EAAKK,SAAS,SAAAU,GAAS,MAAK,CAC1BH,aAAY,GAAAM,OAAAC,OAAAC,EAAA,EAAAD,CAAMJ,EAAUH,cAAhB,CAA8BhD,UAQhDyD,qBAAuB,SAAAxB,GAErByB,QAAQC,IAAI1B,GAEZ2B,MADa,mFAAqF3B,EAAa,aAE5G4B,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAE,GACJ3B,EAAKK,SAAS,CAAEjB,KAAMuC,EAAKC,SAE5BC,MAAM,SAAAC,GAAK,OAAIR,QAAQC,IAAIO,yFAGZ,IAAAC,EAAAtB,KAKlBe,MAAM,4FACHC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAE,GACJI,EAAK1B,SAAS,CAAEjB,KAAMuC,EAAKC,SAE5BC,MAAM,SAAAC,GAAK,OAAIR,QAAQC,IAAIO,sCAI9B,OACE7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACbH,EAAAC,EAAAC,cAAC6D,EAAD,CAAW5B,eAAgBK,KAAKY,wBAElCpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC8D,EAAD,CACE7C,KAAMqB,KAAKd,MAAMP,KACjBC,eAAgBoB,KAAKpB,eACrBC,mBAAoBmB,KAAKK,kCApEnBJ,aCHlBwB,IAASC,OAAOlE,EAAAC,EAAAC,cAACiE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d00cbf2b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst GiftItem = ({ gif, inCollection, toggleCollection }) => {\r\n\r\n  const label = inCollection ? \"Remove from MyCollection\" : \"Add to MyCollection\";\r\n  const labelClass = inCollection ? \"btn btn-outline-danger active btn-block\" : \"btn btn-success btn-block\";\r\n  \r\n  \r\n  return (\r\n    <div className=\"card mb-4 shadow-sm\">\r\n      <img\r\n        className=\"card-img-top img-fluid\"\r\n        src={gif.images.fixed_width.url}\r\n        alt={gif.title}\r\n        title={gif.title}\r\n      />\r\n      <div className=\"card-body\">      \r\n        <div className=\"btn-group-toggle\" data-toggle=\"buttons\">\r\n          <label className={labelClass} >\r\n            <input\r\n              type=\"checkbox\"       \r\n              checked={inCollection}\r\n              onChange={toggleCollection}\r\n              \r\n            /> \r\n            {label}\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <ul className=\"list-group list-group-flush\">\r\n        {gif.username ? (\r\n          <li className=\"list-group-item\">\r\n            <strong>Username:</strong> {gif.username}\r\n          </li>\r\n        ) : null}\r\n\r\n        <li className=\"list-group-item\">\r\n          <strong>ID:</strong> {gif.id} | <strong>Rating:</strong> {gif.rating}\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <strong>Import_datetime:</strong> {gif.import_datetime}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nGiftItem.propTypes = {\r\n  gif: propTypes.object.isRequired,\r\n  inCollection: propTypes.bool.isRequired,\r\n  toggleCollection: propTypes.func.isRequired\r\n};\r\n\r\nexport default GiftItem;\r\n","import React from \"react\";\r\nimport GifItem from \"./GifItem\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst GiftList = ({ gifs, isInCollection, onToggleCollection }) => {\r\n  return (\r\n    \r\n      <div className=\"card-columns\">\r\n        {gifs.map(gif => (\r\n          <GifItem\r\n            key={gif.id}\r\n            gif={gif}\r\n            inCollection={isInCollection(gif.id)}\r\n            toggleCollection={() => onToggleCollection(gif)}\r\n          />\r\n        ))}\r\n      </div>\r\n  \r\n  );\r\n};\r\n\r\nGiftList.propTypes = {\r\n  gifs: propTypes.arrayOf(propTypes.object),\r\n  isInCollection: propTypes.func.isRequired,\r\n  onToggleCollection: propTypes.func.isRequired\r\n};\r\n\r\nexport default GiftList;\r\n","import React, { Component } from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nclass SearchBar extends Component {\r\n  \r\n  state = {\r\n    timeoutId: 0,\r\n    searchTerm: '',\r\n  }  \r\n  /**\r\n   * Handles the change on the search term & triggers a new fetch only after the user stopped typing\r\n   */\r\n  onChangeHandler = (ev) =>{  \r\n    if(this.state.timeoutId){\r\n      clearTimeout(this.state.timeoutId);\r\n    }\r\n    const id = setTimeout(() => {\r\n      this.props.onSearchChange(this.state.searchTerm);\r\n    }, 800);\r\n    this.setState({timeoutId: id,  searchTerm: ev.target.value }); \r\n  }  \r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"col-12 col-md-10 col-lg-8\">\r\n        <form className=\"card card-sm\">\r\n          <div className=\"card-body row no-gutters align-items-center\">\r\n            <div className=\"col-auto\">\r\n              <i className=\"fas fa-search h3 text-body\" />\r\n            </div>\r\n            <div className=\"col\">\r\n              <input\r\n                className=\"form-control form-control-lg form-control-borderless\"\r\n                type=\"search\"\r\n                placeholder=\"Search for something funny!\" \r\n                value={this.state.searchTerm}               \r\n                onChange={this.onChangeHandler}\r\n              />\r\n            </div>\r\n            <div className=\"col-auto\">\r\n              <button className=\"btn btn-lg btn-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  onSearchChange: propTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;\r\n","/**\r\n * API Docs: https://developers.giphy.com/docs/\r\n * api_key=JU6K8LiJFWg6ububq0idHxB0yo7IBEXI\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport GifList from \"./components/GifList\";\r\nimport SearchBar from \"./components/SearchBar\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    gifs: [],\r\n    myCollection: []\r\n  };\r\n\r\n  /**\r\n   * Checks if a gif's ID is in Mycollection\r\n   */\r\n  isInCollection = id => {\r\n    return this.state.myCollection.map(gif => gif.id).indexOf(id) === -1 ? false : true;\r\n  };\r\n\r\n  /**\r\n   * If the checkbox changes, the gif is added or removed from MyCollection\r\n   */\r\n  handleToggleCollection = gif => {\r\n    // remove\r\n    if (this.isInCollection(gif.id)) {\r\n      this.setState(prevState => ({\r\n        myCollection: prevState.myCollection.filter(item => item.id !== gif.id)\r\n      }));\r\n    } else {\r\n      // add\r\n      this.setState(prevState => ({\r\n        myCollection: [...prevState.myCollection, gif]\r\n      }));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * When the serch term changes, fetches for a new set gifs\r\n   */\r\n  handleOnSearchChange = searchTerm => {\r\n    \r\n    console.log(searchTerm);\r\n    const url =  \"https://api.giphy.com/v1/gifs/search?api_key=JU6K8LiJFWg6ububq0idHxB0yo7IBEXI&q=\" + searchTerm + \"&limit=12\"\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        this.setState({ gifs: json.data });\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  componentDidMount() {\r\n    /**\r\n     * Populates Show Images with default data (without search) - trending gifs\r\n     * https://api.giphy.com/v1/gifs/trending?api_key=JU6K8LiJFWg6ububq0idHxB0yo7IBEXI\r\n     */\r\n    fetch(\"https://api.giphy.com/v1/gifs/trending?api_key=JU6K8LiJFWg6ububq0idHxB0yo7IBEXI&limit=12\")\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        this.setState({ gifs: json.data });\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center my-3\">\r\n          <SearchBar onSearchChange={this.handleOnSearchChange} />\r\n        </div>\r\n        <div className=\"row\">\r\n          <GifList\r\n            gifs={this.state.gifs}\r\n            isInCollection={this.isInCollection}\r\n            onToggleCollection={this.handleToggleCollection}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}